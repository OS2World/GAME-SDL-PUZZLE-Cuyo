#!/usr/bin/perl -w

#   Copyright 2006 by the cuyo developers
#   Maintenance modifications 2011 by the cuyo developers
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#



use strict;



open IN, "<summary.in";
open SUM, ">summary.ld";

print SUM << "---";
# This file was automatically generated by genSummary.pl. Don't modify
# it directly. Modify summary.in instead.

---

while (<IN>) {
  removeComments() or next;
  if (m/^file +(.*)$/i) {
    processFile($1);
  } elsif (m/^verbatim$/i) {
    while (<IN>) {
      chomp;
      last if (m/^\s*end\s*(#.*)?$/i);
      print SUM $_, "\n";
    }
  } else {
    die "summary.in: Did not understand '$_'\n";
  }
}

close IN;
close SUM;



sub processFile {
  my $fileName = shift;
  open LD, "<$fileName";
  
  my $levelName;
  
  while (<LD>) {
    removeComments() or next;
    
    next if (m/^include /);  # provisorisch
    
    if (!defined($levelName)) {
      m/^(\w+)\s*=(\s*\{)?$/
        or die "$fileName: Expected '<levelName> =' at the beginning.\n";
      $levelName = $1;
      print SUM "$levelName = {\n";
      print SUM "  filename = \"$fileName\"\n";
      next;
    }
    
    m/^((\w+)(\[[^][]*\])?)\s*=\s*(".*")$/ or next;
    $2 eq "name" || $2 eq "author" or next;
    print SUM "  $1 = $4\n";
  }
  
  defined($levelName) or die "$fileName does not contain a level?\n";
  print SUM "}\n";
  
  close LD;
}




# Operates on $_;
# returns false if, after removing comments, nothing is left over
sub removeComments {
  chomp;
  # Remove comments, leading and trailing space
  s/#.*//;
  s/^\s*//;
  s/\s*$//;
  return $_ ne "";
}






